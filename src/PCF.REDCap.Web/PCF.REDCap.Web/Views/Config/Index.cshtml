@{
    ViewBag.Title = "REDCap Configuration Manager";
}

<div class="page-header">
    <h1>REDCap Configurations</h1>
</div>
<div class="row">
    <div class="col-xs-12">
        <span class="pull-right" style="margin-bottom: 10px;">
            <button class="btn btn-sm btn-info" data-bind="click: act_Add, enable: true" disabled><span class="glyphicon glyphicon-plus"></span> New Configuration</button>
        </span>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <div class="table-responsive">
            <table class="table table-hover table-striped table-condensed" id="table-configs">
                <thead>
                    <tr>
                        <th class="break-block">Name</th>
                        <th class="text-nowrap break-block">Api Url</th>
                        <th class="text-nowrap break-block">Api Key</th>
                        <th class="text-center text-fit break-inline">Status</th>
                        <th class="text-fit break-inline">Actions</th>
                    </tr>
                </thead>
                <tbody data-bind="template: { name: 'config-row', foreach: comp_Configs }"></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        var ModalEditViewModel = function (config) {
            var self = this;

            self.Name = config.Name || "";
            self.Url = config.Url || "";
            self.Key = config.Key || "";

            self.act_Submit = function (form) {
                App.Put("api/v1/configs/" + config.Id, $(form).serializeObject())//Get form data, ko model?
                .done(function (response) {
                    //self.ob_Configs.push(response);
                    $("#modal-add").modal("hide");
                });
            };
        };

        var ModalAddViewModel = function () {
            var self = this;

            self.Name = "";
            self.Url = "";
            self.Key = "";

            self.act_Submit = function (form) {
                App.Post("api/v1/configs", $(form).serializeObject())//Get form data, ko model?
                .done(function (response) {
                    self.ob_Configs.push(response);
                    $("#modal-add").modal("hide");
                });
            };
        };

        var ViewModel = function (response) {
            var self = this;

            self.act_Add = function () {
                App.Modal("modal-config").applyBindings(new ModalAddViewModel()).modal();
            };

            self.ob_Configs = ko.observableArray(response.Configs);

            self.comp_Configs = ko.pureComputed(function () {
                return ko.utils.arrayMap(ko.unwrap(self.ob_Configs), function (config) {//TODO: Sub-viewmodels
                    config.ob_Enabled = ko.observable(config.Enabled);

                    config.Toggle = function () {
                        var toggle = !config.ob_Enabled();
                        App.Patch("api/v1/configs/" + config.Id, { Enabled: toggle })
                        .done(function () {
                            config.ob_Enabled(toggle);
                        });
                    };

                    config.Edit = function () {
                        //App.Modal("modal-config").applyBindings(new ModalEditViewModel(config)).modal();
                        alert("edit");
                    };

                    config.Delete = function () {
                        if (confirm("Are you sure you want to delete this configuration?")) {
                            App.Delete("api/v1/configs/" + config.Id)
                            .done(function () {
                                self.ob_Configs.remove(config);
                            });
                        }
                    };

                    return config;
                });
            }, this);
        };

        $(function () {
            //TODO: Dynamic modal handling
            $("#modal-add").on("hidden.bs.modal", function (e) {
                $(this).find("form")[0].reset();
            });

            App.Get("api/v1/configs")
            .done(function (response) {
                ko.applyBindings(ViewModel(response), $("#body-content")[0]);
                $("[data-toggle='tooltip']").tooltip();
            });
        });
    </script>
}