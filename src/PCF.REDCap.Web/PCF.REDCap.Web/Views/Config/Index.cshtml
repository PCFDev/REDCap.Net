@{
    ViewBag.Title = "REDCap Configuration Manager";
}

<div class="page-header">
    <h1>REDCap Configurations</h1>
</div>
<div class="row">
    <div class="col-xs-12">
        <span class="pull-right" style="margin-bottom: 10px;">
            <button class="btn btn-sm btn-info" data-toggle="modal" data-target="#modal-add" data-bind="enable: true" disabled><span class="glyphicon glyphicon-plus"></span> New Configuration</button>
        </span>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <table class="table table-hover table-condensed" id="table-configs">
            <thead>
                <tr>
                    <th class="break-block">Name</th>
                    <th class="text-nowrap break-block">Api Url</th>
                    <th class="text-nowrap break-block">Api Key</th>
                    <th class="text-center text-fit break-inline">Status</th>
                    <th class="text-fit break-inline">Actions</th>
                </tr>
            </thead>
            <tbody data-bind="template: { name: 'config-template', foreach: comp_Configs }"></tbody>
        </table>
    </div>
</div>

@*TODO: Dynamic*@
<div class="modal fade" id="modal-add">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="_form-horizontal _form-bordered _form-modal" role="form" data-bind="submit: act_Submit, validate: {}">
                <input name="Enabled" type="hidden" value="true" />
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" aria-hidden="true"><span class="glyphicon glyphicon-remove"></span></button>
                    <h4 class="modal-title">Add REDCap Configuration</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-12">
                                <label for="Name" class="control-label">Name</label><input id="Name" type="text" name="Name" placeholder="Example Config" class="form-control" maxlength="255" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-12">
                                <label for="Url" class="control-label">API Url</label><input id="Url" type="url" name="Url" placeholder="https://redcap.example.com/api" class="form-control" maxlength="2048" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-12">
                                <label for="Key" class="control-label">API Key</label><input id="Key" type="text" name="Key" placeholder="" class="form-control" maxlength="32" pattern="[a-fA-f0-9]{32}" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-floppy-save"></span> Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts
{
    @*TODO: Edit*@
    <script type="text/html" id="config-template">
        <tr data-bind="attr: { 'data-id': Id }">
            <td class="break-block" data-bind="text: Name"></td>
            <td class="break-block"><a href="#" target="_blank" data-bind="attr: { href: Url }, text: Url"></a></td>
            <td class="break-block text-mono" data-bind="text: Key"></td>
            <td class="break-inline"><button type="button" class="btn btn-xs btn-block" data-bind="click: Toggle, css: ob_Enabled() ? 'btn-success' : 'btn-danger', text: ob_Enabled() ? 'enabled' : 'disabled'"></button></td>
            <td class="break-block text-nowrap">
                @*<button type="button" class="btn btn-xs btn-warning" title="Edit" data-toggle="tooltip" data-placement="left" data-bind="click: Edit"><span class="glyphicon glyphicon-edit"></span></button>*@
                <button type="button" class="btn btn-xs btn-danger" title="Delete" data-toggle="tooltip" data-placement="right" data-bind="click: Delete"><span class="glyphicon glyphicon-remove"></span></button>
            </td>
        </tr>
    </script>

    <script>
        var ViewModel = function (response) {
            var self = this;

            self.act_Submit = function (form) {
                $.post('api/v1/configs', $(form).serializeObject())//Get form data, ko model?
                .done(function (response) {
                    self.ob_Configs.push(response);
                    $('#modal-add').modal('hide');
                });
            };

            self.ob_Configs = ko.observableArray(response.Configs);

            self.comp_Configs = ko.pureComputed(function () {
                return ko.utils.arrayMap(ko.unwrap(self.ob_Configs), function (config) {//TODO: Sub-viewmodels
                    config.ob_Enabled = ko.observable(config.Enabled);

                    config.Toggle = function () {
                        var toggle = !config.ob_Enabled();
                        $.patch('api/v1/configs/' + config.Id, { Enabled: toggle })
                        .done(function () {
                            config.ob_Enabled(toggle);
                        });
                    };

                    config.Edit = function () {
                        alert('edit');
                    };

                    config.Delete = function () {
                        if (confirm('Are you sure you want to delete this configuration?')) {
                            $.delete('api/v1/configs/' + config.Id)
                            .done(function () {
                                self.ob_Configs.remove(config);
                            });
                        }
                    };

                    return config;
                });
            }, this);
        };

        $(function () {
            //TODO: Dynamic modal handling
            $('#modal-add').on('hidden.bs.modal', function (e) {
                $(this).find('form')[0].reset();
            });

            $.get('api/v1/configs')
            .done(function (response) {
                ko.applyBindings(ViewModel(response), $('#body-content')[0]);
                $('[data-toggle="tooltip"]').tooltip();
            });
        });
    </script>
}